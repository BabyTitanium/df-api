<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dongfan.dongfanapi.mapper.TikuRecordMapper">
  <resultMap id="BaseResultMap" type="com.dongfan.dongfanapi.entity.TikuRecord">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="tiku_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="question_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="user_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="create_at" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="answer" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="correct_answer" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="result" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, tiku_name, question_id, user_id, create_at, answer, correct_answer, result
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tiku_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tiku_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.dongfan.dongfanapi.entity.TikuRecord">
    insert into tiku_record (id, tiku_name, question_id, 
      user_id, create_at, answer, 
      correct_answer, result)
    values (#{id,jdbcType=INTEGER}, #{tikuName,jdbcType=VARCHAR}, #{questionId,jdbcType=INTEGER}, 
      #{userId,jdbcType=INTEGER}, #{createAt,jdbcType=TIMESTAMP}, #{answer,jdbcType=VARCHAR}, 
      #{correctAnswer,jdbcType=VARCHAR}, #{result,jdbcType=INTEGER})
  </insert>
  <insert keyProperty="id" useGeneratedKeys="true" id="insertSelective" parameterType="com.dongfan.dongfanapi.entity.TikuRecord">
    insert into tiku_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="tikuName != null">
        tiku_name,
      </if>
      <if test="questionId != null">
        question_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="createAt != null">
        create_at,
      </if>
      <if test="answer != null">
        answer,
      </if>
      <if test="correctAnswer != null">
        correct_answer,
      </if>
      <if test="result != null">
        result,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="tikuName != null">
        #{tikuName,jdbcType=VARCHAR},
      </if>
      <if test="questionId != null">
        #{questionId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="createAt != null">
        #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="answer != null">
        #{answer,jdbcType=VARCHAR},
      </if>
      <if test="correctAnswer != null">
        #{correctAnswer,jdbcType=VARCHAR},
      </if>
      <if test="result != null">
        #{result,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.dongfan.dongfanapi.entity.TikuRecord">
    update tiku_record
    <set>
      <if test="tikuName != null">
        tiku_name = #{tikuName,jdbcType=VARCHAR},
      </if>
      <if test="questionId != null">
        question_id = #{questionId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="createAt != null">
        create_at = #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="answer != null">
        answer = #{answer,jdbcType=VARCHAR},
      </if>
      <if test="correctAnswer != null">
        correct_answer = #{correctAnswer,jdbcType=VARCHAR},
      </if>
      <if test="result != null">
        result = #{result,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dongfan.dongfanapi.entity.TikuRecord">
    update tiku_record
    set tiku_name = #{tikuName,jdbcType=VARCHAR},
      question_id = #{questionId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      create_at = #{createAt,jdbcType=TIMESTAMP},
      answer = #{answer,jdbcType=VARCHAR},
      correct_answer = #{correctAnswer,jdbcType=VARCHAR},
      result = #{result,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
<select id="getQuestionList"  resultType="java.util.Map" parameterType="map">
 SELECT tiku.*,g.id as record_id,g.create_at,g.answer as user_answer,g.result FROM
 ${dataname} tiku LEFT JOIN (select tiku_record.* from tiku_record where tiku_record.user_id=#{userId}  and tiku_record.tiku_name=#{name} ) g on tiku.id=g.question_id where tiku.chapter_id=#{chapterId}
<if test="pageStart!=null and pageSize!=null">
  limit #{pageStart},#{pageSize}
</if>
</select>
  <select id="getQuestionListCount"  resultType="int" parameterType="map">
   select count (*) from(SELECT tiku.*,g.id as record_id,g.create_at,g.answer as user_answer,g.result FROM
    ${dataname} tiku LEFT JOIN (select tiku_record.* from tiku_record where tiku_record.user_id=#{userId}  and tiku_record.tiku_name=#{name} ) g on tiku.id=g.question_id where tiku.chapter_id=#{chapterId})g
  </select>
  <select id="getChapterList"  resultType="java.util.Map" parameterType="map">
 SELECT * from ${dataname} where 1=1
    <if test="title!=null">
      and title like "%"#{title}"%"
    </if>
    <if test="chapter_parent_id!=null">
      and chapter_parent_id = #{chapter_parent_id}
    </if>

 <if test="pageStart!=null and pageSize!=null">
   limit #{pageStart},#{pageSize}
 </if>
</select>
  <select id="getChapterListCount"  resultType="int" parameterType="map">
    SELECT count(*) from (
          SELECT * from ${dataname} where 1=1
          <if test="title!=null">
            and title like "%"#{title}"%"
          </if>
          <if test="chapter_parent_id!=null">
            and chapter_parent_id = #{chapter_parent_id}
          </if>
    )g
  </select>
  <select id="getTikuQuestionById" resultType="java.util.Map">
    select * from ${dataname} where id=#{questionId}
  </select>
</mapper>