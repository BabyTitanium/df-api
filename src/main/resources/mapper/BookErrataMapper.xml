<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dongfan.dongfanapi.mapper.BookErrataMapper">
  <resultMap id="BaseResultMap" type="com.dongfan.dongfanapi.entity.BookErrata">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="user_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="book_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="create_at" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="status" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="audit_replay" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.dongfan.dongfanapi.entity.BookErrataWithBLOBs">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="user_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="book_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="create_at" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="status" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="audit_replay" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="content" javaType="java.lang.String" jdbcType="LONGVARCHAR" />
      <arg column="images" javaType="java.lang.String" jdbcType="LONGVARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, book_id, create_at, status, audit_replay
  </sql>
  <sql id="Blob_Column_List">
    content, images
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from book_errata
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from book_errata
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.dongfan.dongfanapi.entity.BookErrataWithBLOBs">
    insert into book_errata (id, user_id, book_id, 
      create_at, status, audit_replay, 
      content, images)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{bookId,jdbcType=INTEGER}, 
      #{createAt,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, #{auditReplay,jdbcType=VARCHAR}, 
      #{content,jdbcType=LONGVARCHAR}, #{images,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.dongfan.dongfanapi.entity.BookErrataWithBLOBs">
    insert into book_errata
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="bookId != null">
        book_id,
      </if>
      <if test="createAt != null">
        create_at,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="auditReplay != null">
        audit_replay,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="images != null">
        images,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="bookId != null">
        #{bookId,jdbcType=INTEGER},
      </if>
      <if test="createAt != null">
        #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="auditReplay != null">
        #{auditReplay,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="images != null">
        #{images,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.dongfan.dongfanapi.entity.BookErrataWithBLOBs">
    update book_errata
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="bookId != null">
        book_id = #{bookId,jdbcType=INTEGER},
      </if>
      <if test="createAt != null">
        create_at = #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="auditReplay != null">
        audit_replay = #{auditReplay,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="images != null">
        images = #{images,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.dongfan.dongfanapi.entity.BookErrataWithBLOBs">
    update book_errata
    set user_id = #{userId,jdbcType=INTEGER},
      book_id = #{bookId,jdbcType=INTEGER},
      create_at = #{createAt,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      audit_replay = #{auditReplay,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR},
      images = #{images,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dongfan.dongfanapi.entity.BookErrata">
    update book_errata
    set user_id = #{userId,jdbcType=INTEGER},
      book_id = #{bookId,jdbcType=INTEGER},
      create_at = #{createAt,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      audit_replay = #{auditReplay,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="getUserBookErrInfo" resultType="java.util.Map">
    select book_errata.*,book.author,book.cover,book.describe,book.title from book,book_errata where book_errata.user_id=#{userId} and book_errata.book_id=book.id
    <if test="pageStart!=-1 and pageSize!=-1">
      limit #{pageStart},#{pageSize}
    </if>
  </select>
  <select id="getOneBookErrInfo" resultType="java.util.Map">
select book_errata.* from book left join book_errata on book.id=book_errata.book_id and book.id=#{id}

    <if test="pageStart!=-1 and pageSize!=-1">
      limit #{pageStart},#{pageSize}
    </if>
  </select>
</mapper>