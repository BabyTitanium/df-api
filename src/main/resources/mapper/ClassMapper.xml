<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dongfan.dongfanapi.mapper.ClassMapper">
    <resultMap id="BaseResultMap" type="com.dongfan.dongfanapi.entity.Class">
        <constructor>
            <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="name" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="show" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="sort" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="create_at" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
            <arg column="update_at" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
            <arg column="thumb" javaType="java.lang.String" jdbcType="VARCHAR"/>
        </constructor>
    </resultMap>
    <resultMap id="ResultMapWithBLOBs" type="com.dongfan.dongfanapi.entity.Class">
        <constructor>
            <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="name" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="show" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="sort" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="create_at" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
            <arg column="update_at" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
            <arg column="thumb" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="content" javaType="java.lang.String" jdbcType="LONGVARCHAR"/>
        </constructor>
    </resultMap>
    <sql id="Base_Column_List">
        id, name, show, sort, create_at, update_at, thumb
    </sql>
    <sql id="Blob_Column_List">
        content
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from class
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from class
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.dongfan.dongfanapi.entity.Class">
        insert into class (id, name, show,
        sort, create_at, update_at,
        thumb, content)
        values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{show,jdbcType=INTEGER},
        #{sort,jdbcType=INTEGER}, #{createAt,jdbcType=TIMESTAMP}, #{updateAt,jdbcType=TIMESTAMP},
        #{thumb,jdbcType=VARCHAR}, #{content,jdbcType=LONGVARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.dongfan.dongfanapi.entity.Class">
        insert into class
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="show != null">
                show,
            </if>
            <if test="sort != null">
                sort,
            </if>
            <if test="createAt != null">
                create_at,
            </if>
            <if test="updateAt != null">
                update_at,
            </if>
            <if test="thumb != null">
                thumb,
            </if>
            <if test="content != null">
                content,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="show != null">
                #{show,jdbcType=INTEGER},
            </if>
            <if test="sort != null">
                #{sort,jdbcType=INTEGER},
            </if>
            <if test="createAt != null">
                #{createAt,jdbcType=TIMESTAMP},
            </if>
            <if test="updateAt != null">
                #{updateAt,jdbcType=TIMESTAMP},
            </if>
            <if test="thumb != null">
                #{thumb,jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                #{content,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.dongfan.dongfanapi.entity.Class">
        update class
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="show != null">
                show = #{show,jdbcType=INTEGER},
            </if>
            <if test="sort != null">
                sort = #{sort,jdbcType=INTEGER},
            </if>
            <if test="createAt != null">
                create_at = #{createAt,jdbcType=TIMESTAMP},
            </if>
            <if test="updateAt != null">
                update_at = #{updateAt,jdbcType=TIMESTAMP},
            </if>
            <if test="thumb != null">
                thumb = #{thumb,jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.dongfan.dongfanapi.entity.Class">
        update class
        set name = #{name,jdbcType=VARCHAR},
        show = #{show,jdbcType=INTEGER},
        sort = #{sort,jdbcType=INTEGER},
        create_at = #{createAt,jdbcType=TIMESTAMP},
        update_at = #{updateAt,jdbcType=TIMESTAMP},
        thumb = #{thumb,jdbcType=VARCHAR},
        content = #{content,jdbcType=LONGVARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.dongfan.dongfanapi.entity.Class">
        update class
        set name = #{name,jdbcType=VARCHAR},
        show = #{show,jdbcType=INTEGER},
        sort = #{sort,jdbcType=INTEGER},
        create_at = #{createAt,jdbcType=TIMESTAMP},
        update_at = #{updateAt,jdbcType=TIMESTAMP},
        thumb = #{thumb,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>