<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dongfan.dongfanapi.mapper.AuthRoleUserMapper">
    <resultMap id="BaseResultMap" type="com.dongfan.dongfanapi.entity.AuthRoleUser">
        <constructor>
            <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="role_id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="user_id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
        </constructor>
    </resultMap>
    <sql id="Base_Column_List">
        id, role_id, user_id
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from auth_role_user
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from auth_role_user
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteUserRoles">
        delete from auth_role_user where user_id=#{userId}
    </delete>
    <insert id="insert" parameterType="com.dongfan.dongfanapi.entity.AuthRoleUser">
        insert into auth_role_user (id, role_id, user_id
        )
        values (#{id,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.dongfan.dongfanapi.entity.AuthRoleUser">
        insert into auth_role_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="roleId != null">
                role_id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="roleId != null">
                #{roleId,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <insert id="addUserRoles">
        insert into auth_role_user(user_id,role_id)

        values
        <foreach collection="roleIds"  item="item"  separator=","  >
            (#{userId},#{item})
        </foreach>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.dongfan.dongfanapi.entity.AuthRoleUser">
        update auth_role_user
        <set>
            <if test="roleId != null">
                role_id = #{roleId,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.dongfan.dongfanapi.entity.AuthRoleUser">
        update auth_role_user
        set role_id = #{roleId,jdbcType=INTEGER},
        user_id = #{userId,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <select id="getAuthRoleUser" resultMap="BaseResultMap">
        select * from auth_role_user where role_id=#{roleId} and user_id=#{userId}
    </select>

    <select id="getUserRoles" resultType="map">

    SELECT auth_role.id as roleId,auth_role_user.id as userRoleId,
    auth_role.`name`,auth_role_user.user_id,`user`.nick_name from auth_role
    LEFT JOIN auth_role_user on auth_role.id=auth_role_user.role_id
    and auth_role_user.user_id=#{userId} LEFT JOIN `user` on auth_role_user.user_id=`user`.id

    order by  roleId
    </select>
</mapper>